name: Build and Push Docker Images

on:
  workflow_dispatch:
    inputs:
      version_override:
        description: 'Override version tag'
        required: false
  push:
    paths:
      - 'hacks/auto-backend*'
      - 'atlantis/**'
      - '.devcontainer/**'
      - '.github/workflows/biuld.yaml'

jobs:
  prepare:
    if: ${{ github.event.inputs.version_override == '' }}
    name: Prepare variables
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.prepare.outputs.version }}
    steps:
    - name: Prepare variables
      id: prepare
      shell: bash
      run: |
        BRANCH=$(echo ${GITHUB_REF#refs/heads/})
        COMMIT_SHA_SHORT=$(echo ${GITHUB_SHA} | cut -c1-7)
        echo "::set-output name=version::$(echo ${BRANCH}-${COMMIT_SHA_SHORT})"

  build:
    needs: prepare
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        platform:
          - linux/amd64
          - linux/arm64

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ secrets.GH_CR_USERNAME }}
        password: ${{ secrets.GH_CR_TOKEN }}

    - name: Sanitize repo slug
      uses: actions/github-script@v6
      id: repo_slug
      with:
        result-encoding: string
        script: return 'ghcr.io/${{ secrets.GH_CR_USERNAME }}/${{ github.repository }}'.toLowerCase()

    - name: Build and push Atlantis Docker image
      if: ${{ github.event.inputs.version_override == '' }}
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: ${{ matrix.platform }}
        file: ./atlantis/Dockerfile
        push: true
        tags: ${{ steps.repo_slug.outputs.result }}/atlantis:${{ needs.prepare.outputs.version }}

    - name: Tag Atlantis Docker image as latest
      if: ${{ github.event.inputs.version_override != '' }}
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: ${{ matrix.platform }}
        file: ./atlantis/Dockerfile
        push: true
        tags: |
          ${{ steps.repo_slug.outputs.result }}/atlantis:latest
          ${{ steps.repo_slug.outputs.result }}/atlantis:${{ github.event.inputs.version_override }}

    - name: Build and push Devcontainer Docker image
      if: ${{ github.event.inputs.version_override == '' }}
      uses: docker/build-push-action@v5
      with:
        context: ./.devcontainer
        platforms: ${{ matrix.platform }}
        file: ./.devcontainer/Dockerfile
        push: true
        tags: ${{ steps.repo_slug.outputs.result }}/devcontainer:${{ needs.prepare.outputs.version }}

    - name: Tag Devcontainer Docker image as latest
      if: ${{ github.event.inputs.version_override != '' }}
      uses: docker/build-push-action@v5
      with:
        context: ./.devcontainer
        platforms: ${{ matrix.platform }}
        file: ./.devcontainer/Dockerfile
        push: true
        tags: |
          ${{ steps.repo_slug.outputs.result }}/devcontainer:latest
          ${{ steps.repo_slug.outputs.result }}/devcontainer:${{ github.event.inputs.version_override }}
